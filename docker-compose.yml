services:
  # Frontend service with Bun
  frontend:
    build:
      context: .
      dockerfile: Dockerfile.dev
    ports:
      - "${FRONTEND_PORT:-8080}:8080"
    volumes:
      # Bind mount for source code hot reloading
      - .:/app
      # Named volume for node_modules performance
      - node_modules:/app/node_modules
    environment:
      - NODE_ENV=development
      - VITE_SUPABASE_URL=http://localhost:${SUPABASE_API_PORT:-54321}
      - VITE_SUPABASE_ANON_KEY=${SUPABASE_ANON_KEY}
    depends_on:
      - supabase-db
    networks:
      - apex-overflow-network
    command: bun run dev --host 0.0.0.0 --port 8080

  # Supabase PostgreSQL Database
  supabase-db:
    image: supabase/postgres:15.1.0.147
    ports:
      - "${SUPABASE_DB_PORT:-54322}:5432"
    environment:
      POSTGRES_DB: postgres
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
      POSTGRES_PORT: 5432
    volumes:
      - supabase-db-data:/var/lib/postgresql/data
      - ./supabase/migrations:/docker-entrypoint-initdb.d/migrations:ro
    networks:
      - apex-overflow-network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 10s
      timeout: 5s
      retries: 5

  # Supabase API Gateway
  supabase-api:
    image: supabase/gotrue:v2.132.3
    ports:
      - "${SUPABASE_API_PORT:-54321}:8000"
    environment:
      API_EXTERNAL_URL: http://localhost:${SUPABASE_API_PORT:-54321}
      GOTRUE_API_HOST: 0.0.0.0
      GOTRUE_API_PORT: 8000
      GOTRUE_DB_DRIVER: postgres
      GOTRUE_DB_DATABASE_URL: postgres://postgres:postgres@supabase-db:5432/postgres?sslmode=disable
      GOTRUE_SITE_URL: http://localhost:${FRONTEND_PORT:-8080}
      GOTRUE_URI_ALLOW_LIST: http://localhost:${FRONTEND_PORT:-8080}
      GOTRUE_JWT_SECRET: ${JWT_SECRET:-super-secret-jwt-token-with-at-least-32-characters-long}
      GOTRUE_JWT_EXP: 3600
      GOTRUE_JWT_DEFAULT_GROUP_NAME: authenticated
      GOTRUE_EXTERNAL_EMAIL_ENABLED: true
      GOTRUE_MAILER_AUTOCONFIRM: true
      GOTRUE_SMTP_ADMIN_EMAIL: admin@example.com
      GOTRUE_SMTP_HOST: localhost
      GOTRUE_SMTP_PORT: 587
      GOTRUE_SMTP_USER: ""
      GOTRUE_SMTP_PASS: ""
    depends_on:
      supabase-db:
        condition: service_healthy
    networks:
      - apex-overflow-network

  # Supabase Studio for database management
  supabase-studio:
    image: supabase/studio:20240326-5e5586d
    ports:
      - "${SUPABASE_STUDIO_PORT:-54323}:3000"
    environment:
      SUPABASE_URL: http://supabase-api:8000
      SUPABASE_REST_URL: http://localhost:${SUPABASE_API_PORT:-54321}/rest/v1/
      SUPABASE_ANON_KEY: ${SUPABASE_ANON_KEY}
      SUPABASE_SERVICE_KEY: ${SUPABASE_SERVICE_KEY}
      STUDIO_PG_META_URL: http://localhost:${SUPABASE_API_PORT:-54321}/pg
    depends_on:
      - supabase-api
    networks:
      - apex-overflow-network

  # Supabase Realtime for live updates (optional - can be enabled later)
  # supabase-realtime:
  #   image: supabase/realtime:v2.25.50
  #   ports:
  #     - "${SUPABASE_REALTIME_PORT:-54324}:4000"
  #   environment:
  #     APP_NAME: realtime
  #     PORT: 4000
  #     DB_HOST: supabase-db
  #     DB_PORT: 5432
  #     DB_USER: postgres
  #     DB_PASSWORD: postgres
  #     DB_NAME: postgres
  #     DB_SSL: "false"
  #     SECRET_KEY_BASE: ${SECRET_KEY_BASE:-super-secret-key-base-with-at-least-64-characters-long-for-realtime}
  #   depends_on:
  #     supabase-db:
  #       condition: service_healthy
  #   networks:
  #     - apex-overflow-network

volumes:
  # Named volume for node_modules performance optimization
  node_modules:
    driver: local
  # Volume for Supabase database persistence
  supabase-db-data:
    driver: local

networks:
  apex-overflow-network:
    driver: bridge
